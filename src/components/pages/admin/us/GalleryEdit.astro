---
  import { db, GalleryImage, desc } from 'astro:db';
  import { getMonthName } from '@src/utils/date';
  import ImgViewer from '@src/components/common/ImgViewer.astro';
  import Icon from '@src/components/common/Icon.astro';
  import CustomModal from '@src/components/common/CustomModal.astro';
  import ImageUpload from '@src/components/common/ImageUpload.astro';

  const imagesUrl = (
    await db
    .select()
    .from(GalleryImage)
    .orderBy(desc(GalleryImage.uploadedAt))
    .run()
  )
  .rows
  .map(image => {
    const date = new Date(image.uploadedAt as string);

    return {
      id: image.id,
      path: `${Astro.url.origin}/${image.path}`,
      uploadedAt: `${date.getDate()} ${getMonthName(date.getMonth()).slice(0, 3)}. ${date.getFullYear()}`
    }
  })

---

<ImgViewer />

<section class="bg-gray0 p-5 rounded-md max-h-[500px] outline-2 outline-gray1 overflow-auto flex flex-col gap-5 w-[500px] max-w-[95%]">
  {imagesUrl.length == 0 && (
    <p class="text-center font-bold text-xl text-gray2">No hay imÃ¡genes en la galerÃ­a ðŸ˜”</p>
  )}
  {imagesUrl.map(image => (
    <div class="flex justify-between items-center gap-3 bg-gray1 p-4 rounded-md">
      <div class="flex flex-wrap items-center gap-3">
        <img src={image.path} alt="Gallery Image" class="imgViewer h-20 xs:h-25 w-auto object-contain rounded-md" />
        <p class="text-gray3 font-bold text-xl">{image.uploadedAt}</p>
      </div>
      <button data-image-id={image.id} class="deleteImgGallery hover:cursor-pointer hover:brightness-75 transition-all duration-200">
        <Icon name="xmark" class="fill-red-500 w-4" />
      </button>
    </div>
  ))}
</section>

<button id="addImage" class="flex justify-center !w-fit px-5 !py-2 !text-lg submit-button gap-2">
  <Icon name="plus" class="fill-black w-4" />
  <span class="text-black font-bold">Agregar imagen</span>
</button>

<CustomModal id="galleryAddModal">
  <div class="flex flex-col justify-start items-center gap-5 bg-gray0 outline-2 outline-gray1 p-7 rounded-md">
    <h2 class="text-3xl font-bold text-accent">Agregar Imagen</h2>
    <ImageUpload instanceId="galleryEditImageUpload" realUploadId="image" />
    <button type="submit" disabled class="submit-button !py-2 !w-fit px-5">Agregar</button>
  </div>
</CustomModal>

<script>
  const handleGalleryEdit = () => {
    // Add Image
    const dialog = document.getElementById('galleryAddModal') as HTMLDialogElement;

    if (!dialog) return

    const addImageButton = document.getElementById('addImage') as HTMLButtonElement;
    const imageUpload = document.getElementById(`imageUpload_galleryEditImageUpload`)?.querySelector('input') as HTMLInputElement;

    const realUpload = dialog.querySelector("#image") as HTMLInputElement;
    const submitButton = dialog.querySelector("button[type='submit']") as HTMLButtonElement;

    if (!addImageButton || !imageUpload || !realUpload || !submitButton) return

    addImageButton.addEventListener('click', () => window.customModal.show(dialog.id));

    const validateAddImage = () => {
      submitButton.disabled = realUpload.files?.length === 0
    }

    realUpload.addEventListener("change", validateAddImage)
    realUpload.addEventListener("delete", validateAddImage)

    submitButton.addEventListener("click", e => {
      e.preventDefault();
      const formData = new FormData();
      const file = realUpload.files?.[0];
      if (file) {
        formData.append('image', file);
        fetch('/api/admin/gallery', {
          method: 'POST',
          body: formData,
        }).then(res => res.json()).then(data => {
          if (data.error) {
            window.customAlert.error.show("Â¡Ups! Hubo un error", data.error);
          } else {
            window.customAlert.success.show("Imagen Agregada", "La imagen ha sido agregada correctamente", "", () => {
              window.location.href = window.location.href;
            });
          }
        })
      }
    })

    // Delete Images
    const deleteButtons = document.querySelectorAll('.deleteImgGallery');

    const deleteImg = (imageId: string) => {
      const formData = new FormData();
      formData.append('id', imageId);

      fetch('/api/admin/gallery', {
        method: 'DELETE',
        body: formData,
      }).then(res => res.json()).then(data => {
        if (data.error) {
          window.customAlert.error.show("Â¡Ups! Hubo un error", data.error);
        } else {
          window.customAlert.success.show("Imagen Eliminada", "La imagen ha sido eliminada correctamente", "", () => {
            window.location.href = window.location.href;
          });
        }
      })
    }

    deleteButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const imageId = (button as HTMLButtonElement).dataset.imageId;
        if (imageId) {
          deleteImg(imageId);
        }
      });
    });
  }

  document.addEventListener('astro:page-load', handleGalleryEdit)
</script>