---
  import Icon from "@components/common/Icon.astro"
  const uniqueId = `${Math.random().toString(36).substring(2, 15)}-ComponentCarrousel`;
---

<div id={uniqueId} class="flex flex-col gap-2 max-w-full relative">
  <div class="flex flex-row-reverse gap-1.5 absolute -top-12 right-0">
    <button class="nav">
      <Icon name="right_arrow" class="fill-gray3 w-4 h-auto" />
    </button>
    <button disabled class="nav">
      <Icon name="right_arrow" class="fill-gray3 w-4 h-auto rotate-180" />
    </button>
  </div>
  <section class="flex gap-5 no-scrollbar overflow-auto max-w-full p-1">
    <slot />
  </section>
</div>

<style>
  @import "../../styles/global.css";

  .nav {
    @apply flex justify-center items-center bg-gray1 border border-gray2 rounded-md text-text w-10 h-10 hover:cursor-pointer hover:brightness-90 disabled:opacity-50 disabled:pointer-events-none;
  }
</style>

<script define:vars={{ uniqueId }}>
  function handleCarrousel() {
    const carrousel = document.getElementById(uniqueId);
    if (!carrousel) return;

    const navButtons = carrousel.querySelectorAll(".nav");
    const scrollAmount = 500;

    navButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const direction = button.children[0].classList.contains("rotate-180") ? -1 : 1;
        carrousel.querySelector("section").scrollBy({
          left: direction * scrollAmount,
          behavior: "smooth"
        });
      });
    });

    const handleScroll = () => {
      const section = carrousel.querySelector("section");
      const maxScrollLeft = section.scrollWidth - section.clientWidth;
      const isAtStart = section.scrollLeft <= 0;
      const isAtEnd = section.scrollLeft >= maxScrollLeft;

      navButtons[1].disabled = isAtStart; // Left button
      navButtons[0].disabled = isAtEnd;   // Right button

      // If both buttons are disabled, hide them
      if (isAtStart && isAtEnd) {
        navButtons.forEach(button => button.style.display = "none");
      } else {
        navButtons.forEach(button => button.style.display = "flex");
      }
    };

    carrousel.querySelector("section").addEventListener("scroll", handleScroll);
    handleScroll(); // Initial check
  }

  document.addEventListener("astro:page-load", handleCarrousel);
</script>