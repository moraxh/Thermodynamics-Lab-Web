---
  import { Image } from 'astro:assets';

  import logo from '@assets/images/logo/logo_full.webp'
---

<header transition:name="topBar" class="sticky top-0 from-gray1 to-transparent bg-gradient-to-b flex justify-between items-center gap-12 sm:gap-24 pt-3 px-5 sm:px-14 backdrop-blur-xs z-50">
  <a href="/">
    <Image transition:name="logo" class="w-72 min-w-32" src={logo} alt="logo" loading="eager" />
  </a>

  <nav id="navBar" class="flex justify-between gap-10 text-2xl text-center text-text">
    <slot />
  </nav>

  <button hidden id="nav-menu" class="hover:bg-gray2 hover:cursor-pointer bg-background border-gray2 border-2 min-w-5 sm:min-w-12 w-12 aspect-square rounded-md">
    <span class="text-lg sm:text-xl text-text">☰</span>
    <span class="text-3xl text-text">×</span>
  </button>
</header>

<script>

  document.addEventListener("astro:page-load", () => {
    const navMenu = document.getElementById('nav-menu') as HTMLButtonElement;

    if (!navMenu) return

    if (!navMenu.hasAttribute("listener")) {
      navMenu.setAttribute("listener", "true")
      navMenu.addEventListener('click', () => {
        document.querySelector('header')?.classList.toggle('active');
      });
    }

    // Highlight page link on page load
    const pathname = location.pathname;
    const pages = document.querySelectorAll('#navBar > a') as NodeListOf<HTMLAnchorElement>;

    pages.forEach(el =>  {
      const currentPathname = el.href ? new URL(el.href).pathname : null;
      if (currentPathname === pathname)
        el.classList.add('text-accent');
      else
        el.classList.remove('text-accent');
    })
  })

  // Toggle menu on mobile
  function toggleBurgerMenuIfNeeded() {
    const navBar = document.getElementById('navBar') as HTMLElement;
    const navMenu = document.getElementById('nav-menu') as HTMLButtonElement;
    const header = document.querySelector('header') as HTMLElement;

    if (!navBar || !navMenu || !header) {
      return;
    }

    // Disable the menu to check
    header.classList.remove('burger');
    navMenu.hidden = true;

    // Check if navbar is overflowing
    const overflowing = navBar.scrollWidth > navBar.clientWidth
    || (navBar.scrollWidth == 0  && navBar.clientWidth == 0);

    // Toggle the burger menu
    if (overflowing) {
      header.classList.add('burger');
      navMenu.hidden = false;
    } else {
      header.classList.remove('burger');
      navMenu.hidden = true;
    }
  }

  window.addEventListener('resize', toggleBurgerMenuIfNeeded)
  document.addEventListener('astro:page-load', toggleBurgerMenuIfNeeded)
  document.addEventListener('DOMContentLoaded' , toggleBurgerMenuIfNeeded)
</script>

<style is:global>
  @reference "../../styles/global.css";

  #navBar > a {
    @apply overflow-hidden transition-all duration-300 ease-in-out min-w-fit;
  }

  #navBar > a:hover {
    @apply text-accent *:fill-accent;
  }
  
  #navBar > a::after {
    content: '';
    @apply bg-accent block relative w-full h-0.5 right-[100%] transition-all duration-200 ease-in-out;
  }

  #navBar > a:hover::after {
    @apply right-0;
  }

  header > button > :nth-child(2) {
    @apply hidden;
  }

  header.burger.active {
    @apply fixed left-0 right-0 bottom-0 top-0 bg-gray0/50 flex flex-col gap-12 items-center justify-start overflow-auto p-5;
  }

  header.burger.active > a {
    @apply fixed top-12 left-5 xs:left-12 z-50;
  }
  
  header.burger.active > a > img {
    @apply w-44 xs:w-60;
  }

  header.burger.active > nav {
    @apply bg-gray0 border border-gray1 w-full xs:w-fit px-7 xs:px-20 py-12 rounded-lg flex-col gap-12 items-center mt-36 xs:mt-52;
  }
  
  header.burger.active > nav > a {
    @apply w-fit text-2xl xs:text-3xl;
  }

  header.burger.active > button {
    @apply fixed top-12 right-5 xs:right-12 z-50 xs:translate-y-4;
  }

  header.burger.active > button > :nth-child(2) {
    @apply block;
  }

  header.burger.active > button > :nth-child(1) {
    @apply hidden;
  }

  header.burger:not(.active) > nav {
    @apply hidden; 
  }
</style>