---
  import Icon from "./Icon.astro"
---

<dialog id="imgViewerDialog" class="overflow-hidden fixed top-0 left-0 min-w-screen min-h-screen max-w-screen max-h-screen bg-transparent z-20">
  <button id="imgViewerClose" class="absolute top-0 right-0 outline-none m-6 bg-transparent hover:cursor-pointer hover:brightness-50 transition-all duration-200">
    <Icon name="xmark" class="fill-white w-5" />
  </button>
  <div class="flex items-center justify-center min-h-screen min-w-screen">
    <img class="max-h-[90vh] max-w-[90%] outline-2 outline-gray1 rounded-md object-contain" src="" alt="imgViewer">
  </div>
</dialog>

<script>
  const handleImgViewer = () => {
    const dialog = document.getElementById('imgViewerDialog') as HTMLDialogElement;
    const closeBtn = document.getElementById('imgViewerClose') as HTMLButtonElement;
    const body = document.querySelector('body') as HTMLBodyElement;

    if (!dialog || !closeBtn || !body) {
      return
    }

    const openModal = () => {
      dialog.showModal()
      body.classList.add('overflow-hidden')
    }

    const closeModal = () => {
      dialog.close()
      body.classList.remove('overflow-hidden')
    }

    closeBtn.addEventListener('click', closeModal)
    dialog.addEventListener('close', closeModal)
    dialog.addEventListener('click', (e) => {
      if (!(e.target instanceof HTMLImageElement))
        closeModal()
    })

    const handleImages = () => {
      const images = document.querySelectorAll('.imgViewer') as NodeListOf<HTMLImageElement>;

      images.forEach(image => {
        image.addEventListener('click', () => {
          const img = dialog.querySelector('img') as HTMLImageElement;
          img.src = image.src;
          openModal()
        })
      })
    }

    handleImages()
  }

  document.addEventListener("astro:page-load", handleImgViewer)
</script>

<style is:global>
  .imgViewer {
    cursor: pointer;
  }    
</style>

<style>
  @reference "../../styles/global.css";

  #imgViewerDialog::backdrop {
    background-color: rgb(0 0 0 / .5);
    backdrop-filter: blur(3px);
  }

  #imgViewerDialog[open] {
    animation: fadeIn .2s ease-in-out forwards;
  }

  @keyframes fadeIn{
    0%{
      opacity:0;
      scale: .5;
    }
    100%{
      opacity:1;
      scale: 1;
    }
  }
</style>